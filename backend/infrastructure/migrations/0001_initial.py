# Generated by Django 5.0.1 on 2025-03-26 11:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="account_set",
                        to="auth.group",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="account_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="IbanityAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("account_id", models.CharField(max_length=255, unique=True)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("product", models.CharField(blank=True, max_length=255)),
                ("reference", models.CharField(blank=True, max_length=255)),
                ("currency", models.CharField(blank=True, max_length=10)),
                (
                    "authorization_expiration_expected_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "current_balance",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "available_balance",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("subtype", models.CharField(blank=True, max_length=255)),
                ("holder_name", models.CharField(blank=True, max_length=255)),
                ("resource_id", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Ibanity Account",
                "verbose_name_plural": "Ibanity Accounts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PontoToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "access_token",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "refresh_token",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "expires_in",
                    models.IntegerField(blank=True, default=3600, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Ponto Token",
                "verbose_name_plural": "Ponto Tokens",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        help_text="Business-specific identifier for the invoice. Can contain special characters and varies by country format. Note: Invoice numbers may be similar or identical due to: 1) Different suppliers using the same numbering format 2) OCR extraction errors requiring manual correction 3) Initial automated extraction before user verification 4) Manual edits during the invoice review process. Therefore, invoice numbers are not constrained to be unique.",
                        max_length=100,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total invoice amount. Maximum 99,999,999.99. Negative amounts not allowed.",
                        max_digits=10,
                    ),
                ),
                (
                    "due_date",
                    models.DateField(
                        help_text="Date when payment is due. Used for overdue calculations and urgency levels."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Payment"),
                            ("paid", "Payment Received"),
                            ("overdue", "Payment Overdue"),
                        ],
                        default="pending",
                        help_text="Current payment status of the invoice. Automatically updated based on payment and due date.",
                        max_length=20,
                    ),
                ),
                (
                    "manual_urgency",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Overdue"),
                            (2, "Critical"),
                            (3, "High"),
                            (4, "Medium"),
                            (5, "Low"),
                        ],
                        help_text="Manual override for invoice urgency. If not set, urgency is calculated from due date.",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "file_path",
                    models.CharField(
                        help_text="Relative path to the stored invoice PDF file in the system.",
                        max_length=255,
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        help_text="User who uploaded the invoice PDF. Protected from deletion.",
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Invoice",
                "verbose_name_plural": "Invoices",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["invoice_number"], name="infrastruct_invoice_5be228_idx"
                    ),
                    models.Index(
                        fields=["status"], name="infrastruct_status_fca9c8_idx"
                    ),
                    models.Index(
                        fields=["due_date"], name="infrastruct_due_dat_2e2701_idx"
                    ),
                ],
            },
        ),
    ]
