version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    restart: always
    command:
      #- "--api.dashboard=true"
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - backend
    networks:
      - billify_network
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    env_file:
      - ../backend/.env.example
    restart: always
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`api.localhost`)"
      - "traefik.http.routers.django.entrypoints=web"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
    depends_on:
      - db
      - redis
      - minio
    networks:
      - billify_network
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    environment:
      - POSTGRES_DB=billify
      - POSTGRES_USER=billify
      - POSTGRES_PASSWORD=billify_local
    networks:
      - billify_network

  redis:
    image: redis:7-alpine
    networks:
      - billify_network

  minio:
    image: minio/minio
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server --console-address ":9001" /data
    networks:
      - billify_network

volumes:
  postgres_data:
  minio_data:

networks:
  billify_network:
    driver: bridge