version: '3.8'

services:
  nginx:
    image: $NGINX_IMAGE
    ports:
        - "80:80"
        - "443:443"
    links:
        - backend:backend
        - frontend:frontend
    depends_on:
      - frontend
      - backend
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
    networks:
      - billify_network

  backend:
    image: $BACKEND_IMAGE
    restart: always
    environment:
      - DEBUG=0
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - ALLOWED_HOSTS=localhost,api.billify.be,127.0.0.1
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CORS_ALLOWED_ORIGINS=https://app.billify.be
      - AWS_ACCESS_KEY_ID=${MINIO_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_PASSWORD}
      - AWS_STORAGE_BUCKET_NAME=billify
      - AWS_S3_ENDPOINT_URL=http://minio:9000
      - REDIS_URL=redis://redis:6379/0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`api.billify.be`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls.certresolver=le"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
    depends_on:
      - db
      - redis
      - minio
    networks:
      - billify_network
  frontend:
    image: $FRONTEND_IMAGE
    environment:
      - NEXT_PUBLIC_BACKEND_URL=https://api.billify.be
      - NEXT_PUBLIC_DEBUG=false
      - NODE_ENV=production
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextjs.rule=Host(`app.billify.be`)"
      - "traefik.http.routers.nextjs.entrypoints=websecure"
      - "traefik.http.routers.nextjs.tls.certresolver=le"
      - "traefik.http.services.nextjs.loadbalancer.server.port=3000"
    depends_on:
      - backend
    networks:
      - billify_network

  db:
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - billify_network

  redis:
    image: redis:7-alpine
    restart: always
    networks:
      - billify_network

  minio:
    image: minio/minio
    restart: always
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    command: server --console-address ":9001" /data
    networks:
      - billify_network

volumes:
  postgres_data:
    external: true
  minio_data:
    external: true

networks:
  billify_network:
    driver: bridge